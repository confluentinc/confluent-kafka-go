// Code generated by protoc-gen-go. DO NOT EDIT.
// source: example.proto

package pb_example

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Author struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id                   int32    `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Works                []string `protobuf:"bytes,4,rep,name=works,proto3" json:"works,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Author) Reset()         { *m = Author{} }
func (m *Author) String() string { return proto.CompactTextString(m) }
func (*Author) ProtoMessage()    {}
func (*Author) Descriptor() ([]byte, []int) {
	return fileDescriptor_15a1dc8d40dadaa6, []int{0}
}

func (m *Author) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Author.Unmarshal(m, b)
}
func (m *Author) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Author.Marshal(b, m, deterministic)
}
func (m *Author) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Author.Merge(m, src)
}
func (m *Author) XXX_Size() int {
	return xxx_messageInfo_Author.Size(m)
}
func (m *Author) XXX_DiscardUnknown() {
	xxx_messageInfo_Author.DiscardUnknown(m)
}

var xxx_messageInfo_Author proto.InternalMessageInfo

func (m *Author) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Author) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Author) GetWorks() []string {
	if m != nil {
		return m.Works
	}
	return nil
}

type Pizza struct {
	Size                 string   `protobuf:"bytes,1,opt,name=size,proto3" json:"size,omitempty"`
	Toppings             []string `protobuf:"bytes,2,rep,name=toppings,proto3" json:"toppings,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pizza) Reset()         { *m = Pizza{} }
func (m *Pizza) String() string { return proto.CompactTextString(m) }
func (*Pizza) ProtoMessage()    {}
func (*Pizza) Descriptor() ([]byte, []int) {
	return fileDescriptor_15a1dc8d40dadaa6, []int{1}
}

func (m *Pizza) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pizza.Unmarshal(m, b)
}
func (m *Pizza) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pizza.Marshal(b, m, deterministic)
}
func (m *Pizza) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pizza.Merge(m, src)
}
func (m *Pizza) XXX_Size() int {
	return xxx_messageInfo_Pizza.Size(m)
}
func (m *Pizza) XXX_DiscardUnknown() {
	xxx_messageInfo_Pizza.DiscardUnknown(m)
}

var xxx_messageInfo_Pizza proto.InternalMessageInfo

func (m *Pizza) GetSize() string {
	if m != nil {
		return m.Size
	}
	return ""
}

func (m *Pizza) GetToppings() []string {
	if m != nil {
		return m.Toppings
	}
	return nil
}

func init() {
	proto.RegisterType((*Author)(nil), "pb_example.Author")
	proto.RegisterType((*Pizza)(nil), "pb_example.Pizza")
}

func init() { proto.RegisterFile("example.proto", fileDescriptor_15a1dc8d40dadaa6) }

var fileDescriptor_15a1dc8d40dadaa6 = []byte{
	// 147 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4d, 0xad, 0x48, 0xcc,
	0x2d, 0xc8, 0x49, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x2a, 0x48, 0x8a, 0x87, 0x8a,
	0x28, 0x39, 0x71, 0xb1, 0x39, 0x96, 0x96, 0x64, 0xe4, 0x17, 0x09, 0x09, 0x71, 0xb1, 0xe4, 0x25,
	0xe6, 0xa6, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x81, 0xd9, 0x42, 0x7c, 0x5c, 0x4c, 0x99,
	0x29, 0x12, 0x4c, 0x0a, 0x8c, 0x1a, 0xac, 0x41, 0x4c, 0x99, 0x29, 0x42, 0x22, 0x5c, 0xac, 0xe5,
	0xf9, 0x45, 0xd9, 0xc5, 0x12, 0x2c, 0x0a, 0xcc, 0x1a, 0x9c, 0x41, 0x10, 0x8e, 0x92, 0x39, 0x17,
	0x6b, 0x40, 0x66, 0x55, 0x55, 0x22, 0xc8, 0x88, 0xe2, 0xcc, 0x2a, 0xb8, 0x11, 0x20, 0xb6, 0x90,
	0x14, 0x17, 0x47, 0x49, 0x7e, 0x41, 0x41, 0x66, 0x5e, 0x7a, 0xb1, 0x04, 0x13, 0x58, 0x17, 0x9c,
	0x9f, 0xc4, 0x06, 0x76, 0x8f, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x7b, 0xd4, 0x11, 0xad, 0xa0,
	0x00, 0x00, 0x00,
}
