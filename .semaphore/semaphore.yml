version: v1.0
name: 'build-test-release'
agent:
  machine:
    type: s1-prod-ubuntu20-04-amd64-1

global_job_config:
  secrets:
    - name: vault_sem2_approle
  prologue:
    commands:
      - chmod 400 ~/.ssh/id_rsa
      - sem-version go 1.18
      - export "GOPATH=$(go env GOPATH)"
      - export "SEMAPHORE_GIT_DIR=${GOPATH}/src/github.com/confluentinc/${SEMAPHORE_PROJECT_NAME}"
      - export "PATH=${GOPATH}/bin:${PATH}"
      - mkdir -vp "${SEMAPHORE_GIT_DIR}" "${GOPATH}/bin"
      - git config --global url."git@github.com:".insteadOf "https://github.com/"
      - checkout
      - make install-vault
      - . mk-include/bin/vault-setup
      - . vault-sem-get-secret aws_credentials
      - . vault-sem-get-secret gitconfig
      - . vault-sem-get-secret ssh_id_rsa
      - . vault-sem-get-secret ssh_config
      - . vault-sem-get-secret netrc
      - . vault-sem-get-secret semaphore-secrets-global
      - . vault-sem-get-secret maven-settings
      - . vault-sem-get-secret cpd_gcloud
      - . vault-sem-get-secret ci-reporting
      - . vault-sem-get-secret v1/ci/kv/service-foundations/cc-mk-include
      - . vault-sem-get-secret dockerhub-semaphore-cred-ro
      - exec &> >(tee -a build.log)
      - make init-ci
  epilogue:
    always:
      commands:
        - make epilogue-ci

blocks:
  - name: "Go 1.19 OSX bundled librdkafka"
    dependencies: []
    task:
      agent:
        machine:
          type: s1-prod-macos
      prologue:
        commands:
          - sem-version go 1.19
          - export GOPATH=$(go env GOPATH)
          - export PATH="$PATH:$GOPATH/bin"
          - export PKG_CONFIG_PATH="/usr/local/opt/openssl/lib/pkgconfig:$HOME/confluent-kafka-go/tmp-build/lib/pkgconfig"
          - export LD_LIBRARY_PATH="$HOME/confluent-kafka-go/tmp-build/lib"
          - export DYLD_LIBRARY_PATH="$HOME/confluent-kafka-go/tmp-build/lib"
          - rm -rf tmp-build
          - go install golang.org/x/lint/golint@latest && touch .do_lint
      jobs:
        - name: "Static Build"
          env_vars:
            - name: EXPECT_LINK_INFO
              value: static
          commands_file: semaphore_commands.sh
        - name: "Dynamic Build"
          env_vars:
            - name: EXPECT_LINK_INFO
              value: dynamic
          commands_file: semaphore_commands.sh
  - name: "Go 1.19 linux bundled librdkafka"
    dependencies: []
    task:
      agent:
        machine:
          type: s1-prod-ubuntu20-04-amd64-2
      prologue:
        commands:
          - sem-version go 1.19
          - export GOPATH=$(go env GOPATH)
          - export PATH="$PATH:$GOPATH/bin"
          - export PKG_CONFIG_PATH="$HOME/confluent-kafka-go/tmp-build/lib/pkgconfig"
          - export LD_LIBRARY_PATH="$HOME/confluent-kafka-go/tmp-build/lib"
          - export DYLD_LIBRARY_PATH="$HOME/confluent-kafka-go/tmp-build/lib"
          - wget -qO - https://packages.confluent.io/deb/5.4/archive.key | sudo apt-key add -
          - sudo add-apt-repository "deb [arch=amd64] https://packages.confluent.io/deb/5.4 stable main"
          - sudo apt-get update -q
          - sudo apt-get install confluent-librdkafka-plugins -y
          - rm -rf tmp-build
          - go install -v golang.org/x/lint/golint@latest && touch .do_lint
      jobs:
        - name: "Static Build"
          env_vars:
            - name: EXPECT_LINK_INFO
              value: static
          commands_file: semaphore_integration_commands.sh
        - name: "Dynamic Build"
          env_vars:
            - name: EXPECT_LINK_INFO
              value: dynamic
          commands_file: semaphore_integration_commands.sh
  - name: "Go 1.19 linux arm64 bundled librdkafka"
    dependencies: []
    task:
      agent:
        machine:
          type: s1-prod-ubuntu20-04-arm64-1
      prologue:
        commands:
          - sem-version go 1.19
          - export GOPATH=$(go env GOPATH)
          - export PATH="$PATH:$GOPATH/bin"
          - export PKG_CONFIG_PATH="$HOME/confluent-kafka-go/tmp-build/lib/pkgconfig"
          - export LD_LIBRARY_PATH="$HOME/confluent-kafka-go/tmp-build/lib"
          - export DYLD_LIBRARY_PATH="$HOME/confluent-kafka-go/tmp-build/lib"
          - wget -qO - https://packages.confluent.io/deb/5.4/archive.key | sudo apt-key add -
          - sudo add-apt-repository "deb [arch=amd64] https://packages.confluent.io/deb/5.4 stable main"
          - sudo apt-get update -q
          #- sudo apt-get install confluent-librdkafka-plugins -y
          - rm -rf tmp-build
          - go install golang.org/x/lint/golint@latest && touch .do_lint
      jobs:
        - name: "Static Build"
          env_vars:
            - name: EXPECT_LINK_INFO
              value: static
          commands_file: semaphore_commands.sh
        - name: "Dynamic Build"
          env_vars:
            - name: EXPECT_LINK_INFO
              value: dynamic
          commands_file: semaphore_commands.sh
  - name: "Go 1.19 Windows bundled librdkafka"
    dependencies: []
    task:
      agent:
        machine:
          type: s1-prod-windows
      prologue:
        commands:
          # Install Go
          - cache restore win-go-1.19
          - "& .\\mk\\setup-go.ps1"
          - cache delete win-go-1.19
          - cache store win-go-1.19 ($env:USERPROFILE + '\go')
          - cache restore msys2-x64
          # Set up msys2
          - ".\\mk\\mingw-w64\\setup-msys2.ps1"
          - $env:PATH = 'C:\msys64\usr\bin;' + $env:PATH
          - bash -lc './mk/mingw-w64/msys2-dependencies.sh'
          - cache delete msys2-x64
          - cache store msys2-x64 c:/msys64
      jobs:
        - name: "Static Build"
          env_vars:
            - name: EXPECT_LINK_INFO
              value: static
            - name: CHERE_INVOKING
              value: 'yes'
            - name: MSYSTEM
              value: UCRT64
          commands_file: semaphore_commands.ps1
auto_cancel:
  running:
    when: "branch != 'master'"

execution_time_limit:
  hours: 1

