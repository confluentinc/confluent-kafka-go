version: v1.0
name: 'confluent-kafka-go build pipeline'
agent:
  machine:
    type: s1-prod-ubuntu20-04-amd64-1
global_job_config:
  env_vars:
    - name: LIBRDKAFKA_VERSION
      value: v2.4.0-RC2
  prologue:
    commands:
      - checkout
blocks:
  - name: "go 1.21 OSX bundled librdkafka"
    dependencies: [ ]
    task:
      agent:
        machine:
          type: s1-prod-macos-13-5-amd64
      prologue:
        commands:
          - sem-version go 1.21
          - export GOPATH=$(go env GOPATH)
          - export PATH="$PATH:$GOPATH/bin"
          - export PKG_CONFIG_PATH="/usr/local/opt/openssl/lib/pkgconfig:$HOME/confluent-kafka-go/tmp-build/lib/pkgconfig"
          - export LD_LIBRARY_PATH="$HOME/confluent-kafka-go/tmp-build/lib"
          - export DYLD_LIBRARY_PATH="$HOME/confluent-kafka-go/tmp-build/lib"
          - rm -rf tmp-build
          - go install golang.org/x/lint/golint@latest && touch .do_lint
      jobs:
        - name: "Static Build"
          env_vars:
            - name: EXPECT_LINK_INFO
              value: static
          commands_file: semaphore_commands.sh
        - name: "Dynamic Build"
          env_vars:
            - name: EXPECT_LINK_INFO
              value: dynamic
          commands_file: semaphore_commands.sh
  - name: "go 1.21 linux bundled librdkafka"
    dependencies: [ ]
    task:
      agent:
        machine:
          type: s1-prod-ubuntu20-04-amd64-2
      prologue:
        commands:
          - sem-version go 1.21
          - export GOPATH=$(go env GOPATH)
          - export PATH="$PATH:$GOPATH/bin"
          - export PKG_CONFIG_PATH="$HOME/confluent-kafka-go/tmp-build/lib/pkgconfig"
          - export LD_LIBRARY_PATH="$HOME/confluent-kafka-go/tmp-build/lib"
          - export DYLD_LIBRARY_PATH="$HOME/confluent-kafka-go/tmp-build/lib"
          - wget -qO - https://packages.confluent.io/deb/5.4/archive.key | sudo apt-key add -
          - sudo add-apt-repository "deb [arch=amd64] https://packages.confluent.io/deb/5.4 stable main"
          - sudo apt-get update -q
          - sudo apt-get install confluent-librdkafka-plugins -y
          - rm -rf tmp-build
          - go install -v golang.org/x/lint/golint@latest && touch .do_lint
      jobs:
        - name: "Static Build"
          env_vars:
            - name: EXPECT_LINK_INFO
              value: static
          commands_file: semaphore_integration_commands.sh
        - name: "Dynamic Build"
          env_vars:
            - name: EXPECT_LINK_INFO
              value: dynamic
          commands_file: semaphore_integration_commands.sh
  - name: "go 1.21 linux arm64 bundled librdkafka"
    dependencies: [ ]
    task:
      agent:
        machine:
          type: s1-prod-ubuntu20-04-arm64-1
      prologue:
        commands:
          - sem-version go 1.21
          - export GOPATH=$(go env GOPATH)
          - export PATH="$PATH:$GOPATH/bin"
          - export PKG_CONFIG_PATH="$HOME/confluent-kafka-go/tmp-build/lib/pkgconfig"
          - export LD_LIBRARY_PATH="$HOME/confluent-kafka-go/tmp-build/lib"
          - export DYLD_LIBRARY_PATH="$HOME/confluent-kafka-go/tmp-build/lib"
          - wget -qO - https://packages.confluent.io/deb/5.4/archive.key | sudo apt-key add -
          - sudo add-apt-repository "deb [arch=amd64] https://packages.confluent.io/deb/5.4 stable main"
          - sudo apt-get update -q
          #- sudo apt-get install confluent-librdkafka-plugins -y
          - rm -rf tmp-build
          - go install golang.org/x/lint/golint@latest && touch .do_lint
      jobs:
        - name: "Static Build"
          env_vars:
            - name: EXPECT_LINK_INFO
              value: static
          commands_file: semaphore_commands.sh
        - name: "Dynamic Build"
          env_vars:
            - name: EXPECT_LINK_INFO
              value: dynamic
          commands_file: semaphore_commands.sh
  - name: "go 1.21 Windows bundled librdkafka"
    dependencies: [ ]
    task:
      agent:
        machine:
          type: s1-prod-windows
      prologue:
        commands:
          # Install Go
          - "& .\\mk\\setup-go.ps1"
          # Set up msys2
          - ".\\mk\\mingw-w64\\setup-msys2.ps1"
          - $env:PATH = 'C:\msys64\usr\bin;' + $env:PATH
          - bash -lc './mk/mingw-w64/msys2-dependencies.sh'
      jobs:
        - name: "Static Build"
          env_vars:
            - name: EXPECT_LINK_INFO
              value: static
            - name: CHERE_INVOKING
              value: 'yes'
            - name: MSYSTEM
              value: UCRT64
          commands_file: semaphore_commands.ps1
