# This file is managed by ServiceBot plugin - Semaphore. The content in this file is created using a common
# template and configurations in service.yml.
# Any modifications made to version, name, agent, and global_job_config will be overwritten by the generated
# content in nightly runs. Code changes made to the remaining sections will not be affected.
# For more information, please refer to the page:
# https://confluentinc.atlassian.net/wiki/spaces/Foundations/pages/2871296194/Add+SemaphoreCI
version: v1.0
name: build-test-release
agent:
  machine:
    type: s1-prod-ubuntu20-04-amd64-1

auto_cancel:
  running:
    when: "branch != 'master'"

execution_time_limit:
  hours: 1

queue:
  - when: "branch != 'master'"
    processing: parallel

global_job_config:
  prologue:
    commands:
      - sem-version go 1.18
      - export "GOPATH=$(go env GOPATH)"
      - export "SEMAPHORE_GIT_DIR=${GOPATH}/src/github.com/confluentinc/${SEMAPHORE_PROJECT_NAME}"
      - export "PATH=${GOPATH}/bin:${PATH}"
      - mkdir -vp "${SEMAPHORE_GIT_DIR}" "${GOPATH}/bin"
      - checkout
      - make show-args
      - . vault-setup
      - . vault-sem-get-secret ci-reporting
      - . vault-sem-get-secret v1/ci/kv/service-foundations/cc-mk-include
      - make init-ci
  epilogue:
    always:
      commands:
        - make epilogue-ci

blocks:
  - name: "go 1.21 OSX bundled librdkafka"
    dependencies: []
    task:
      agent:
        machine:
          type: s1-prod-macos-13-5-amd64
      prologue:
        commands:
          - sem-version go 1.21
          - export GOPATH=$(go env GOPATH)
          - export PATH="$PATH:$GOPATH/bin"
          - export PKG_CONFIG_PATH="/usr/local/opt/openssl/lib/pkgconfig:$HOME/confluent-kafka-go/tmp-build/lib/pkgconfig"
          - export LD_LIBRARY_PATH="$HOME/confluent-kafka-go/tmp-build/lib"
          - export DYLD_LIBRARY_PATH="$HOME/confluent-kafka-go/tmp-build/lib"
          - rm -rf tmp-build
          - go install golang.org/x/lint/golint@latest && touch .do_lint
      jobs:
        - name: "Static Build"
          env_vars:
            - name: EXPECT_LINK_INFO
              value: static
          commands_file: semaphore_commands.sh
        - name: "Dynamic Build"
          env_vars:
            - name: EXPECT_LINK_INFO
              value: dynamic
          commands_file: semaphore_commands.sh
  - name: "go 1.21 linux bundled librdkafka"
    dependencies: []
    task:
      agent:
        machine:
          type: s1-prod-ubuntu20-04-amd64-2
      prologue:
        commands:
          - sem-version go 1.21
          - export GOPATH=$(go env GOPATH)
          - export PATH="$PATH:$GOPATH/bin"
          - export PKG_CONFIG_PATH="$HOME/confluent-kafka-go/tmp-build/lib/pkgconfig"
          - export LD_LIBRARY_PATH="$HOME/confluent-kafka-go/tmp-build/lib"
          - export DYLD_LIBRARY_PATH="$HOME/confluent-kafka-go/tmp-build/lib"
          - wget -qO - https://packages.confluent.io/deb/5.4/archive.key | sudo apt-key add -
          - sudo add-apt-repository "deb [arch=amd64] https://packages.confluent.io/deb/5.4 stable main"
          - sudo apt-get update -q
          - sudo apt-get install confluent-librdkafka-plugins -y
          - rm -rf tmp-build
          - go install -v golang.org/x/lint/golint@latest && touch .do_lint
      jobs:
        - name: "Static Build + Integration tests (CGRP classic)"
          env_vars:
            - name: EXPECT_LINK_INFO
              value: static
          commands_file: semaphore_integration_commands.sh
        - name: "Dynamic Build + Integration tests (CGRP classic)"
          env_vars:
            - name: EXPECT_LINK_INFO
              value: dynamic
          commands_file: semaphore_integration_commands.sh
        - name: "Static Build + Integration tests (CGRP consumer)"
          env_vars:
            - name: EXPECT_LINK_INFO
              value: static
            - name: TEST_CONSUMER_GROUP_PROTOCOL
              value: consumer
          commands_file: semaphore_integration_commands.sh
        - name: "Dynamic Build + Integration tests (CGRP consumer)"
          env_vars:
            - name: EXPECT_LINK_INFO
              value: dynamic
            - name: TEST_CONSUMER_GROUP_PROTOCOL
              value: consumer
          commands_file: semaphore_integration_commands.sh
  - name: "go 1.21 linux arm64 bundled librdkafka"
    dependencies: []
    task:
      agent:
        machine:
          type: s1-prod-ubuntu20-04-arm64-1
      prologue:
        commands:
          - sem-version go 1.21
          - export GOPATH=$(go env GOPATH)
          - export PATH="$PATH:$GOPATH/bin"
          - export PKG_CONFIG_PATH="$HOME/confluent-kafka-go/tmp-build/lib/pkgconfig"
          - export LD_LIBRARY_PATH="$HOME/confluent-kafka-go/tmp-build/lib"
          - export DYLD_LIBRARY_PATH="$HOME/confluent-kafka-go/tmp-build/lib"
          - wget -qO - https://packages.confluent.io/deb/5.4/archive.key | sudo apt-key add -
          - sudo add-apt-repository "deb [arch=amd64] https://packages.confluent.io/deb/5.4 stable main"
          - sudo apt-get update -q
          #- sudo apt-get install confluent-librdkafka-plugins -y
          - rm -rf tmp-build
          - go install golang.org/x/lint/golint@latest && touch .do_lint
      jobs:
        - name: "Static Build"
          env_vars:
            - name: EXPECT_LINK_INFO
              value: static
          commands_file: semaphore_commands.sh
        - name: "Dynamic Build"
          env_vars:
            - name: EXPECT_LINK_INFO
              value: dynamic
          commands_file: semaphore_commands.sh
  - name: "go 1.21 Windows bundled librdkafka"
    dependencies: []
    task:
      agent:
        machine:
          type: s1-prod-windows
      prologue:
        commands:
          # Install Go
          - "& .\\mk\\setup-go.ps1"
          # Set up msys2
          - ".\\mk\\mingw-w64\\setup-msys2.ps1"
          - $env:PATH = 'C:\msys64\usr\bin;' + $env:PATH
          - bash -lc './mk/mingw-w64/msys2-dependencies.sh'
      jobs:
        - name: "Static Build"
          env_vars:
            - name: EXPECT_LINK_INFO
              value: static
            - name: CHERE_INVOKING
              value: 'yes'
            - name: MSYSTEM
              value: UCRT64
          commands_file: semaphore_commands.ps1
