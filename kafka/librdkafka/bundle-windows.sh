#!/bin/bash

# This should be run from the MSYS2 MinGW 64-bit shell to build librdkafka_windows.a
VERSION=v1.5.0
SRC_DIR=/mingw64/src/github.com/edenhill

function errorcheck {
	if [ $? -ne 0 ]; then
		read -p "Press Enter to exit"
		exit 1
	fi
}

pacman -S --noconfirm --needed git mingw-w64-x86_64-gcc mingw-w64-x86_64-cmake mingw-w64-x86_64-make mingw-w64-x86_64-cyrus-sasl
errorcheck

mkdir -p $SRC_DIR
pushd $SRC_DIR
rm -rf librdkafka
git clone --depth 1 --branch $VERSION https://github.com/edenhill/librdkafka.git
errorcheck

cd librdkafka
cmake \
    -G "MinGW Makefiles" \
    -D WITHOUT_WIN32_CONFIG=ON  \
    -D WITH_LIBDL=OFF \
    -D WITH_PLUGINS=OFF \
    -D WITH_SASL=ON \
    -D WITH_SSL=ON \
    -D WITH_ZLIB=OFF \
    -D RDKAFKA_BUILD_STATIC=ON \
	-D RDKAFKA_BUILD_EXAMPLES=OFF \
	-D RDKAFKA_BUILD_TESTS=OFF .
errorcheck

mingw32-make
errorcheck

popd
cp $SRC_DIR/librdkafka/src/librdkafka.a ./librdkafka_windows.a
cat >../build_windows.go <<EOF
// +build !dynamic


// This file was auto-generated by librdkafka/bundle-windows.sh, DO NOT EDIT.

package kafka

// #cgo CFLAGS: -I\${SRCDIR} -DLIBRDKAFKA_STATICLIB
// #cgo LDFLAGS: \${SRCDIR}/librdkafka/librdkafka_windows.a -lws2_32 -lcrypto -lzstd -lssl -llz4 -lsasl2 -lsecur32 -lcrypt32
import "C"

// LibrdkafkaLinkInfo explains how librdkafka was linked to the Go client
const LibrdkafkaLinkInfo = "static windows built with Mingw-w64"
EOF

exit
